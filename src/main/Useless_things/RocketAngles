#include "Robot.h"

#include <iostream>
#include <string>

namespace frc
{
namespace lcchs
{

/*void Robot::rotateToAngle45()
{

    double tolerance = 3;
    double rocketAngle = 45;

    if (gyroAngle != rocketAngle + tolerance)
    {
        if (gyroAngle > rocketAngle + tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, -0.4);
        }
        else if (gyroAngle < rocketAngle - tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, 0.4);
        }
        else
        {
            powerTrain.driveRobot(0, 0, 0);
        }
    }
}

void Robot::rotateToAngle90()
{

    double tolerance = 3;
    double rocketAngle = 90;

    if (gyroAngle != rocketAngle + tolerance)
    {
        if (gyroAngle > rocketAngle + tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, -0.4);
        }
        else if (gyroAngle < rocketAngle - tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, 0.4);
        }
        else
        {
            powerTrain.driveRobot(0, 0, 0);
        }
    }
}

void Robot::rotateToAngle135()
{

    double tolerance = 3;
    double rocketAngle = 135;

    if (gyroAngle != rocketAngle + tolerance)
    {
        if (gyroAngle > rocketAngle + tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, -0.4);
        }
        else if (gyroAngle < rocketAngle - tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, 0.4);
        }
        else
        {
            powerTrain.driveRobot(0, 0, 0);
        }
    }
}

void Robot::rotateToAngleNeg45()
{

    double tolerance = 3;
    double rocketAngle = -45;

    if (gyroAngle != rocketAngle + tolerance)
    {
        if (gyroAngle > rocketAngle + tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, -0.4);
        }
        else if (gyroAngle < rocketAngle - tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, 0.4);
        }
        else
        {
            powerTrain.driveRobot(0, 0, 0);
        }
    }
}

void Robot::rotateToAngleNeg90()
{

    double tolerance = 3;
    double rocketAngle = -90;

    if (gyroAngle != rocketAngle + tolerance)
    {
        if (gyroAngle > rocketAngle + tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, -0.4);
        }
        else if (gyroAngle < rocketAngle - tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, 0.4);
        }
        else
        {
            powerTrain.driveRobot(0, 0, 0);
        }
    }
}

void Robot::rotateToAngleNeg135()
{

    double tolerance = 3;
    double rocketAngle = -135;

    if (gyroAngle != rocketAngle + tolerance)
    {
        if (gyroAngle > rocketAngle + tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, -0.4);
            std::cout << "the robot will rotate to 45 degrees" << std::endl;
        }
        else if (gyroAngle < rocketAngle - tolerance) //rotate to 45 degrees
        {
            powerTrain.driveRobot(0, 0, 0.4);
        }
        else
        {
            powerTrain.driveRobot(0, 0, 0);
        }
    }
}
*/

void Robot::rotateToRocketAngles()
{
    double toleranceRocket = 2;

    double rotationSpeedDif;
    double rotationSpeed = 0.3;

    //Right Rocket

    //RIGHT ROTATION

    if ((gyroAngle > 30 + toleranceRocket && gyroAngle < 60 - toleranceRocket) ||
        (gyroAngle > 75 + toleranceRocket && gyroAngle < 90 - toleranceRocket) ||
        (gyroAngle > 105 + toleranceRocket && gyroAngle < 120 - toleranceRocket) ||
        (gyroAngle > -75 + toleranceRocket && gyroAngle < -60 - toleranceRocket) ||
        (gyroAngle > -105 + toleranceRocket && gyroAngle < -90 - toleranceRocket) ||
        (gyroAngle > -180 + toleranceRocket && gyroAngle < -120 - toleranceRocket) ||
        //cargo Angle
        (gyroAngle > -30 + toleranceRocket && gyroAngle < 0 - toleranceRocket))
    {
        rotationSpeedDif = rotationSpeed;
    }

    //LEFT ROTATION

    else if (gyroAngle < 75 - toleranceRocket && gyroAngle > 60 + toleranceRocket ||
             (gyroAngle < 105 - toleranceRocket && gyroAngle > 90 + toleranceRocket) ||
             (gyroAngle < 180 - toleranceRocket && gyroAngle > 120 + toleranceRocket) ||
             (gyroAngle < -30 - toleranceRocket && gyroAngle > -60 + toleranceRocket) ||
             (gyroAngle < -75 - toleranceRocket && gyroAngle > -90 + toleranceRocket) ||
             (gyroAngle < -105 - toleranceRocket && gyroAngle > -120 + toleranceRocket)
             //Cargo Angle
             (gyroAngle < 30 - toleranceRocket && gyroAngle > 0 + toleranceRocket))
    {
        rotationSpeedDif = -rotationSpeed;
    }
    else
    {
        rotationSpeedDif = 0;
    }
}
} // namespace lcchs
} // namespace frc